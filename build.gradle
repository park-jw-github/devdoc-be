plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.devdoc'
version = '0.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// 환경변수를 사용해 개발환경 or 배포환경 구분
def activeProfile = System.getenv("SPRING_PROFILES_ACTIVE") ?: "dev"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring-Security 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation group: 'com.mysql', name: 'mysql-connector-j'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'com.h2database:h2'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    enabled = false
}

bootRun {
    systemProperty("spring.profiles.active", activeProfile)
}
